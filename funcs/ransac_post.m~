function [ score, good ] = ransac_post(ranks,db_lut,rep_qid,rep_vid,fg_scoring,fg_wei,esc_thre,quant_knn, query_frame_info,database, query_topics,db_frame_dir,frame_sampling,show)

if ~exist('esc_thre','var')
    esc_thre = inf;
end

if ~exist('quant_knn','var')
    quant_knn = 1;
end

if ~exist('db_frame_dir','var')
    show = false;
end

if ~exist('show','var')
    show = false;
end

[num_video,num_query] = size(ranks);
num_feat = length(database);
score = zeros(size(ranks));
good = false(size(ranks));
total_time = 0;
for qid = 1:num_query
    prev_good_idx = 0;
    for rid = 3:3:10%num_video
        if rep_vid(rid,qid) == 0
            continue;
        end
        rep_qid_kp=cell(1,num_feat);
        rep_vid_kp=cell(1,num_feat);
        rep_qid_kp_wid=cell(1,num_feat);
        rep_vid_kp_wid=cell(1,num_feat);
        rep_qid_fg_idx=cell(1,num_feat);
        for nid = 1:num_feat
            tic;
            rep_vid_id = 1+(rep_vid(rid,qid)-1)*frame_sampling;
            video_name = db_lut{ranks(rid,qid)};
            video_feat_fullname = fullfile(database{nid}.db_mat_dir,[video_name,'.mat']);
            video_quant_fullname = fullfile(database{nid}.quant_dir,[video_name,'.mat']);
            if ~exist(video_feat_fullname,'file')
                fprintf('feature mat %s doesnot exist\n',video_feat_fullname);
                continue;
            end
            if ~exist(video_quant_fullname,'file')
                fprintf('quant file %s doesnot exist\n',video_quant_fullname);
                continue;
            end
            load(video_feat_fullname, 'clip_kp');
            if rep_vid_id > length(clip_kp)
                fprintf('warning: rep vid id exceed the length of the video\n');
            end
            rep_kps = clip_kp{min(rep_vid_id,end)};
            clear clip_kp
            load(video_quant_fullname, 'bins');
            rep_bins = bins{min(rep_vid_id,end)}(1:min(quant_knn,end),:);
            
            rep_kps = repmat(rep_kps,1,size(rep_bins,1));
            rep_bins = reshape(rep_bins',1, []);
            rep_vid_kp_wid{nid} = double(rep_bins);
            rep_vid_kp{nid} = double(rep_kps);

            rep_kps = query_frame_info{nid}{qid}.query_kp{rep_qid(rid,qid)};
            rep_bins = query_frame_info{nid}{qid}.valid_bins{rep_qid(rid,qid)}(1:min(quant_knn,end),:);
            rep_fg_idx = false(1,size(rep_bins,2));
            rep_fg_idx(query_frame_info{nid}{qid}.fg_index{rep_qid(rid,qid)}) = true;
            rep_kps = repmat(rep_kps,1,size(rep_bins,1));
            rep_fg_idx = repmat(rep_fg_idx,1,size(rep_bins,1));
            rep_bins = reshape(rep_bins',1, []);
            rep_qid_kp_wid{nid} = double(rep_bins);
            rep_qid_kp{nid} = double(rep_kps);
            rep_qid_fg_idx{nid} = rep_fg_idx;
        end
        if show
            rep_qid_filename = query_topics{qid}{1}{rep_qid(rid,qid)};
            load(video_feat_fullname, 'clip_frame');
            rep_vid_filename = fullfile(db_frame_dir,db_lut{ranks(rid,qid)},[clip_frame{rep_vid(rid,qid)} '.png']);
            clear clip_frame
        else
            rep_qid_filename = [];
            rep_vid_filename = [];
        end
        
        rep_qid_kp=cell2mat(rep_qid_kp);
        rep_vid_kp=cell2mat(rep_vid_kp);
        rep_qid_kp_wid=cell2mat(rep_qid_kp_wid);
        rep_vid_kp_wid=cell2mat(rep_vid_kp_wid);
        rep_qid_fg_idx=cell2mat(cellfun(@(x) logical(x),rep_qid_fg_idx, 'UniformOutput', false));
        
        com_wid = intersect(rep_qid_kp_wid(:),rep_vid_kp_wid(:));
        matches=cell(1,length(com_wid));
        qid_ind = repmat(1:size(rep_qid_kp_wid,2),size(rep_qid_kp_wid,1),1);
        vid_ind = repmat(1:size(rep_vid_kp_wid,2),size(rep_vid_kp_wid,1),1);
        for i=1:length(com_wid)
            com_qid_ind = qid_ind(rep_qid_kp_wid==com_wid(i));
            com_vid_ind = vid_ind(rep_vid_kp_wid==com_wid(i));
            [p,q]=meshgrid(com_qid_ind,com_vid_ind);
            matches{i} = [p(:) q(:)]'; 
        end
        unique(
        matches=cell2mat(matches);
        if length(matches)>4
            [score(rid,qid),passed] = ransac_verify(rep_qid_kp, rep_vid_kp, ...
                matches,rep_qid_fg_idx, fg_scoring, fg_wei,rep_qid_filename, rep_vid_filename, show);
        end
        
        if passed
            prev_good_idx = rid;
            good(rid,qid) = true;
        elseif rid-prev_good_idx>esc_thre
            fprintf('abort from topic:%s,image:%d,video:%d\n', topic_name, iid, rid);
            break;
        end
        total_time = total_time+toc;
        fprintf('\r%d/%d %d/%d score %d %.0fs',qid,num_query,rid,num_video,score(rid,qid),total_time);
    end
end
fprintf('\r ransac time %.0fs\n',total_time);
end
